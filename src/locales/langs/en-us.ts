const local: App.I18n.Schema = {
  system: {
    title: 'VueNaiveAdmin',
    updateTitle: 'System Version Update Notification',
    updateContent: 'A new version of the system has been detected. Do you want to refresh the page immediately?',
    updateConfirm: 'Refresh immediately',
    updateCancel: 'Later',
  },
  common: {
    action: 'Action',
    add: 'Add',
    addSuccess: 'Add Success',
    backToHome: 'Back to home',
    batchDelete: 'Batch Delete',
    cancel: 'Cancel',
    close: 'Close',
    check: 'Check',
    expandColumn: 'Expand Column',
    columnSetting: 'Column Setting',
    config: 'Config',
    confirm: 'Confirm',
    delete: 'Delete',
    deleteSuccess: 'Delete Success',
    confirmDelete: 'Are you sure you want to delete?',
    edit: 'Edit',
    warning: 'Warning',
    error: 'Error',
    index: 'Index',
    keywordSearch: 'Please enter keyword',
    logout: 'Logout',
    logoutConfirm: 'Are you sure you want to log out?',
    lookForward: 'Coming soon',
    modify: 'Modify',
    modifySuccess: 'Modify Success',
    noData: 'No Data',
    operate: 'Operate',
    pleaseCheckValue: 'Please check whether the value is valid',
    refresh: 'Refresh',
    reset: 'Reset',
    search: 'Search',
    switch: 'Switch',
    tip: 'Tip',
    trigger: 'Trigger',
    update: 'Update',
    updateSuccess: 'Update Success',
    userCenter: 'User Center',
    yesOrNo: {
      yes: 'Yes',
      no: 'No',
    },
  },
  request: {
    logout: 'Logout user after request failed',
    logoutMsg: 'User status is invalid, please log in again',
    logoutWithModal: 'Pop up modal after request failed and then log out user',
    logoutWithModalMsg: 'User status is invalid, please log in again',
    refreshToken: 'The requested token has expired, refresh the token',
    tokenExpired: 'The requested token has expired',
  },
  theme: {
    themeSchema: {
      title: 'Theme Schema',
      light: 'Light',
      dark: 'Dark',
      auto: 'Follow System',
    },
    grayscale: 'Grayscale',
    colourWeakness: 'Colour Weakness',
    layoutMode: {
      'title': 'Layout Mode',
      'vertical': 'Vertical Menu Mode',
      'horizontal': 'Horizontal Menu Mode',
      'vertical-mix': 'Vertical Mix Menu Mode',
      'horizontal-mix': 'Horizontal Mix menu Mode',
      'reverseHorizontalMix': 'Reverse first level menus and child level menus position',
    },
    recommendColor: 'Apply Recommended Color Algorithm',
    recommendColorDesc: 'The recommended color algorithm refers to',
    themeColor: {
      title: 'Theme Color',
      primary: 'Primary',
      info: 'Info',
      success: 'Success',
      warning: 'Warning',
      error: 'Error',
      followPrimary: 'Follow Primary',
    },
    scrollMode: {
      title: 'Scroll Mode',
      wrapper: 'Wrapper',
      content: 'Content',
    },
    page: {
      animate: 'Page Animate',
      mode: {
        'title': 'Page Animate Mode',
        'fade': 'Fade',
        'fade-slide': 'Slide',
        'fade-bottom': 'Fade Zoom',
        'fade-scale': 'Fade Scale',
        'zoom-fade': 'Zoom Fade',
        'zoom-out': 'Zoom Out',
        'none': 'None',
      },
    },
    fixedHeaderAndTab: 'Fixed Header And Tab',
    header: {
      height: 'Header Height',
      breadcrumb: {
        visible: 'Breadcrumb Visible',
        showIcon: 'Breadcrumb Icon Visible',
      },
      multilingual: {
        visible: 'Display multilingual button',
      },
    },
    tab: {
      visible: 'Tab Visible',
      cache: 'Tag Bar Info Cache',
      height: 'Tab Height',
      mode: {
        title: 'Tab Mode',
        chrome: 'Chrome',
        button: 'Button',
      },
    },
    sider: {
      inverted: 'Dark Sider',
      width: 'Sider Width',
      collapsedWidth: 'Sider Collapsed Width',
      mixWidth: 'Mix Sider Width',
      mixCollapsedWidth: 'Mix Sider Collapse Width',
      mixChildMenuWidth: 'Mix Child Menu Width',
    },
    footer: {
      visible: 'Footer Visible',
      fixed: 'Fixed Footer',
      height: 'Footer Height',
      right: 'Right Footer',
    },
    watermark: {
      visible: 'Watermark Full Screen Visible',
      text: 'Watermark Text',
    },
    themeDrawerTitle: 'Theme Configuration',
    pageFunTitle: 'Page Function',
    resetCacheStrategy: {
      title: 'Reset Cache Strategy',
      close: 'Close Page',
      refresh: 'Refresh Page',
    },
    configOperation: {
      copyConfig: 'Copy Config',
      copySuccessMsg: 'Copy Success, Please replace the variable "themeSettings" in "src/theme/settings.ts"',
      resetConfig: 'Reset Config',
      resetSuccessMsg: 'Reset Success',
    },
  },
  route: {
    '/login': 'Login',
    '/403': 'No Permission',
    '/404': 'Page Not Found',
    '/500': 'Server Error',
    '/home': 'Home',
    '/document': 'Document',
    '/document/naive': 'Naive UI Document',
    '/document/unocss': 'UnoCSS Document',
    '/document/vite': 'Vite Document',
    '/document/vue': 'Vue Document',
    '/about': 'About',
    '/user-center': 'User Center',
    '/function': 'System Function',
    '/function/hide-child': 'Hide Child',
    '/function/hide-child/one': 'Hide Child',
    '/function/hide-child/two': 'Two',
    '/function/hide-child/three': 'Three',
    '/function/multi-tab': 'Multi Tab',
    '/function/tab': 'Tab',
    '/function/request': 'Request',
    '/plugin': 'Plugin',
    '/plugin/audio': 'Audio',
    '/plugin/copy': 'Copy',
    '/plugin/icon': 'Icon',
    '/plugin/map': 'Map',
    '/plugin/map/google': 'Google',
    '/plugin/pdf': 'PDF Preview',
    '/plugin/pdf/html': 'HTML',
    '/plugin/pdf/link': 'Link',
    '/plugin/signature': 'Signature',
    '/plugin/swiper': 'Swiper',
    '/plugin/typeit': 'Typeit',
    '/plugin/video': 'Video',
    '/plugin/charts': 'Charts',
    '/plugin/charts/antv': 'AntV',
    '/plugin/charts/d3': 'D3',
    '/plugin/charts/echarts': 'ECharts',
    '/plugin/charts/vchart': 'VChart',
    '/plugin/excel': 'Excel',
    '/plugin/flow': 'Flow Charts',
    '/plugin/flow/vue-flow': 'Vue Flow',
    '/plugin/gantt': 'Gantt Charts',
    '/plugin/gantt/dhtmlx': 'dhtmlxGantt',
    '/plugin/gantt/vtable': 'VTableGantt',
    '/plugin/guide': 'Guide',
    '/plugin/json': 'JSON Editor',
    '/plugin/json/json-editor-vue': 'JSON Editor Vue',
    '/plugin/json/vue-json-pretty': 'Vue JSON Pretty',
    '/plugin/tables': 'Tables',
    '/plugin/tables/vtable': 'VTable',
    '/plugin/tables/ag-grid': 'AG Grid',
    '/multi-menu': 'Multi Menu',
    '/multi-menu/first': 'Menu One',
    '/multi-menu/first/child': 'Menu One Child',
    '/multi-menu/second': 'Menu Two',
    '/multi-menu/second/child': 'Menu Two Child',
    '/multi-menu/second/child/home': 'Menu Two Child Home',
    '/manage': 'System Manage',
    '/manage/role': 'Role Management',
    '/manage/user': 'User Management',
    '/manage/user-detail.[id]': 'User Detail',
  },
  page: {
    login: {
      common: {
        loginOrRegister: 'Login / Register',
        userNamePlaceholder: 'Please enter user name',
        phonePlaceholder: 'Please enter phone number',
        codePlaceholder: 'Please enter verification code',
        passwordPlaceholder: 'Please enter password',
        confirmPasswordPlaceholder: 'Please enter password again',
        codeLogin: 'Verification code login',
        confirm: 'Confirm',
        back: 'Back',
        validateSuccess: 'Verification passed',
        loginSuccess: 'Login successfully',
        welcomeBack: 'Welcome back, {userName} !',
      },
      pwdLogin: {
        title: 'Password Login',
        rememberMe: 'Remember me',
        forgetPassword: 'Forget password?',
        register: 'Register',
        otherAccountLogin: 'Other Account Login',
        otherLoginMode: 'Other Login Mode',
        superAdmin: 'Super Admin',
        admin: 'Admin',
        user: 'User',
      },
      codeLogin: {
        title: 'Verification Code Login',
        getCode: 'Get verification code',
        reGetCode: 'Reacquire after {time}s',
        sendCodeSuccess: 'Verification code sent successfully',
        imageCodePlaceholder: 'Please enter image verification code',
      },
      register: {
        title: 'Register',
        agreement: 'I have read and agree to',
        protocol: '《User Agreement》',
        policy: '《Privacy Policy》',
      },
      resetPwd: {
        title: 'Reset Password',
      },
    },
    home: {
      greeting: 'Good morning, {userName}, today is another day full of vitality!',
      weatherDesc: 'Today is cloudy to clear, 20℃ - 25℃!',
      projectCount: 'Project Count',
      todo: 'Todo',
      message: 'Message',
      downloadCount: 'Download Count',
      registerCount: 'Register Count',
      schedule: 'Work and rest Schedule',
      study: 'Study',
      work: 'Work',
      rest: 'Rest',
      entertainment: 'Entertainment',
      visitCount: 'Visit Count',
      turnover: 'Turnover',
      dealCount: 'Deal Count',
      projectNews: {
        title: 'Project News',
        moreNews: 'More News',
        desc1: 'Loic Duong created the open source project vue-naive-admin on May 28, 2024!',
        desc2: 'Loic Duong submitted a bug to vue-naive-admin, the multi-tab bar will not adapt.',
        desc3: 'Loic Duong is ready to do sufficient preparation for the release of vue-naive-admin!',
        desc4: 'Loic Duong is busy writing project documentation for vue-naive-admin!',
        desc5: 'Loic Duong just wrote some of the workbench pages casually, and it was enough to see!',
      },
      creativity: 'Creativity',
    },
    function: {
      tab: {
        tabOperate: {
          title: 'Tab Operation',
          addTab: 'Add Tab',
          addTabDesc: 'To about page',
          closeTab: 'Close Tab',
          closeCurrentTab: 'Close Current Tab',
          closeAboutTab: 'Close "About" Tab',
          addMultiTab: 'Add Multi Tab',
          addMultiTabDesc1: 'To MultiTab page',
          addMultiTabDesc2: 'To MultiTab page(with query params)',
        },
        tabTitle: {
          title: 'Tab Title',
          changeTitle: 'Change Title',
          change: 'Change',
          resetTitle: 'Reset Title',
          reset: 'Reset',
        },
      },
      multiTab: {
        routeParam: 'Route Param',
        backTab: 'Back function_tab',
      },
      request: {
        repeatedErrorOccurOnce: 'Repeated Request Error Occurs Once',
        repeatedError: 'Repeated Request Error',
        repeatedErrorMsg1: 'Custom Request Error 1',
        repeatedErrorMsg2: 'Custom Request Error 2',
      },
    },
    about: {
      title: 'About',
      introduction: `VueNaiveAdmin is an elegant and powerful admin template, based on the latest front-end technology stack, including Vue3, Vite5, TypeScript, Pinia and UnoCSS. It has built-in rich theme configuration and components, strict code specifications, and an automated file routing system. In addition, it also uses the online mock data solution based on ApiFox. SoybeanAdmin provides you with a one-stop admin solution, no additional configuration, and out of the box. It is also a best practice for learning cutting-edge technologies quickly.`,
      projectInfo: {
        title: 'Project Info',
        version: 'Version',
        latestBuildTime: 'Latest Build Time',
        githubLink: 'Github Link',
        previewLink: 'Preview Link',
        node: 'Recommend Node version',
        pnpm: 'Recommend pnpm version',
      },
      prdDep: 'Production Dependencies',
      devDep: 'Development Dependencies',
    },
    manage: {
      common: {
        status: {
          enable: 'Enable',
          disable: 'Disable',
        },
      },
      role: {
        title: 'Role List',
        roleName: 'Role Name',
        roleCode: 'Role Code',
        roleStatus: 'Role Status',
        roleDesc: 'Role Description',
        menuAuth: 'Menu Auth',
        buttonAuth: 'Button Auth',
        form: {
          roleName: 'Please enter role name',
          roleCode: 'Please enter role code',
          roleStatus: 'Please select role status',
          roleDesc: 'Please enter role description',
        },
        addRole: 'Add Role',
        editRole: 'Edit Role',
      },
      user: {
        title: 'User List',
        userName: 'User Name',
        userGender: 'Gender',
        nickName: 'Nick Name',
        userPhone: 'Phone Number',
        userEmail: 'Email',
        userStatus: 'User Status',
        userRole: 'User Role',
        form: {
          userName: 'Please enter user name',
          userGender: 'Please select gender',
          nickName: 'Please enter nick name',
          userPhone: 'Please enter phone number',
          userEmail: 'Please enter email',
          userStatus: 'Please select user status',
          userRole: 'Please select user role',
        },
        addUser: 'Add User',
        editUser: 'Edit User',
        gender: {
          male: 'Male',
          female: 'Female',
        },
      },
    },
  },
  form: {
    required: 'Cannot be empty',
    userName: {
      required: 'Please enter user name',
      invalid: 'User name format is incorrect',
    },
    phone: {
      required: 'Please enter phone number',
      invalid: 'Phone number format is incorrect',
    },
    pwd: {
      required: 'Please enter password',
      invalid: '6-18 characters, including letters, numbers, and underscores',
    },
    confirmPwd: {
      required: 'Please enter password again',
      invalid: 'The two passwords are inconsistent',
    },
    code: {
      required: 'Please enter verification code',
      invalid: 'Verification code format is incorrect',
    },
    email: {
      required: 'Please enter email',
      invalid: 'Email format is incorrect',
    },
  },
  dropdown: {
    closeCurrent: 'Close Current',
    closeOther: 'Close Other',
    closeLeft: 'Close Left',
    closeRight: 'Close Right',
    closeAll: 'Close All',
  },
  icon: {
    themeConfig: 'Theme Configuration',
    themeSchema: 'Theme Schema',
    lang: 'Switch Language',
    fullscreen: 'Fullscreen',
    fullscreenExit: 'Exit Fullscreen',
    reload: 'Reload Page',
    collapse: 'Collapse Menu',
    expand: 'Expand Menu',
    pin: 'Pin',
    unpin: 'Unpin',
  },
  datatable: {
    itemCount: 'Total {total} items',
  },
}

export default local
